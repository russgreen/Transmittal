<Project>
	<!--
    =====================================================
                       Set License Key 
    
    Set license key for Syncfusion controls at build time
    =====================================================
    -->
	<Target Name="PreBuildSyncfusion" BeforeTargets="PreBuildEvent">
		<PropertyGroup>
			<SourceFile>$(ProjectDir)App.xaml.cs</SourceFile>
			<KeyFile>$(SolutionDir)SyncfusionKey.txt</KeyFile>
			<DummyKey>##SyncfusionLicense##</DummyKey>
		</PropertyGroup>

		<!-- Read the license key from the key file -->
		<ReadLinesFromFile File="$(KeyFile)">
			<Output TaskParameter="Lines" PropertyName="LicenseKey" />
		</ReadLinesFromFile>

		<!-- Replace the dummy key with the actual license key -->
		<ReplaceFileText
		  InputFilename="$(SourceFile)"
		  OutputFilename="$(SourceFile)"
		  MatchExpression="$(DummyKey)"
		  ReplacementText="$(LicenseKey)" />
	</Target>

	<Target Name="PostBuildSyncfusion" AfterTargets="PostBuildEvent">
		<PropertyGroup>
			<SourceFile>$(ProjectDir)App.xaml.cs</SourceFile>
			<KeyFile>$(SolutionDir)SyncfusionKey.txt</KeyFile>
			<DummyKey>##SyncfusionLicense##</DummyKey>
		</PropertyGroup>
		<!-- Read the license key from the key file -->
		<ReadLinesFromFile File="$(KeyFile)">
			<Output TaskParameter="Lines" PropertyName="LicenseKey" />
		</ReadLinesFromFile>
		<!-- Replace the dummy key with the actual license key -->
		<ReplaceFileText
		  InputFilename="$(SourceFile)"
		  OutputFilename="$(SourceFile)"
		  MatchExpression="$(LicenseKey)"
		  ReplacementText="$(DummyKey)" />
	</Target>

	<UsingTask Condition="'$(MSBuildRuntimeType)' == 'Full'" TaskName="ReplaceFileText" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
		<ParameterGroup>
			<InputFilename ParameterType="System.String" Required="true" />
			<OutputFilename ParameterType="System.String" Required="true" />
			<MatchExpression ParameterType="System.String" Required="true" />
			<ReplacementText ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Reference Include="System.Core" />
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
              File.WriteAllText(OutputFilename,Regex.Replace(File.ReadAllText(InputFilename),MatchExpression,ReplacementText));
        ]]>
			</Code>
		</Task>
	</UsingTask>

	<UsingTask Condition="'$(MSBuildRuntimeType)' == 'Core'" TaskName="ReplaceFileText" TaskFactory="RoslynCodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<InputFilename ParameterType="System.String" Required="true" />
			<OutputFilename ParameterType="System.String" Required="true" />
			<MatchExpression ParameterType="System.String" Required="true" />
			<ReplacementText ParameterType="System.String" Required="true" />
		</ParameterGroup>
		<Task>
			<Using Namespace="System" />
			<Using Namespace="System.IO" />
			<Using Namespace="System.Text.RegularExpressions" />
			<Code Type="Fragment" Language="cs">
				<![CDATA[
              File.WriteAllText(OutputFilename,Regex.Replace(File.ReadAllText(InputFilename),MatchExpression,ReplacementText));
        ]]>
			</Code>
		</Task>
	</UsingTask>
</Project>
